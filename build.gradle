buildscript {
    ext.versions = [kotlin: '1.2.50',
                    ktlint: '0.24.0',]
    repositories {
        google()
        jcenter()
        maven { url 'https://plugins.gradle.org/m2/' }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.1.3'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${versions.kotlin}"
        classpath 'org.jetbrains.dokka:dokka-android-gradle-plugin:0.9.17'
        classpath 'com.github.dcendents:android-maven-gradle-plugin:2.1'
        classpath 'pl.allegro.tech.build:axion-release-plugin:1.9.1'
        classpath 'com.getkeepsafe.dexcount:dexcount-gradle-plugin:0.8.3'
        classpath 'com.github.ben-manes:gradle-versions-plugin:0.20.0'
        classpath 'gradle.plugin.org.jlleitschuh.gradle:ktlint-gradle:4.1.0'
    }
}

apply plugin: 'com.github.ben-manes.versions'
apply plugin: 'pl.allegro.tech.build.axion-release'

scmVersion {
    tag {
        prefix = ''
    }
    hooks {
        pre 'fileUpdate', [file       : 'README.md',
                           pattern    : { v, p -> /(['\/])$v(['\/])/ },
                           replacement: { v, p -> "\$1$v\$2" }]
        pre 'commit', { v, p -> "Release version: $v [ci skip]" }
    }
}

allprojects {
    repositories {
        google()
        jcenter()
    }
}

subprojects {
    version = scmVersion.version
    group = 'com.github.tmurakami.aackt'
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

ext {
    deps = [:]

    deps.kotlin = [stdlib: "org.jetbrains.kotlin:kotlin-stdlib:${versions.kotlin}",
                   junit4: "org.jetbrains.kotlin:kotlin-test-junit:${versions.kotlin}",]

    deps.android = [arch: [:]]
    def arch = deps.android.arch

    def lifecycleVersion = '1.1.1'
    arch.core = [testing: "android.arch.core:core-testing:$lifecycleVersion",]
    arch.lifecycle = [runtime        : "android.arch.lifecycle:runtime:$lifecycleVersion",
                      extensions     : "android.arch.lifecycle:extensions:$lifecycleVersion",
                      livedata       : "android.arch.lifecycle:livedata:$lifecycleVersion",
                      reactivestreams: "android.arch.lifecycle:reactivestreams:$lifecycleVersion",
                      viewmodel      : "android.arch.lifecycle:viewmodel:$lifecycleVersion",]

    def roomVersion = '1.1.1'
    def room = [runtime: "android.arch.persistence.room:runtime:$roomVersion",
                testing: "android.arch.persistence.room:testing:$roomVersion",]
    arch.persistence = [:]
    arch.persistence.room = room

    def pagingVersion = '1.0.1'
    arch.paging = [runtime: "android.arch.paging:runtime:$pagingVersion",
                   rxjava2: "android.arch.paging:rxjava2:$pagingVersion",]

    arch.work = [runtime: 'android.arch.work:work-runtime-ktx:1.0.0-alpha03',]
}
