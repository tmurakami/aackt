buildscript {
    ext.versions = [kotlin: '1.3.61',]
    repositories {
        gradlePluginPortal()
        google()
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.5.3'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${versions.kotlin}"
        classpath 'org.jetbrains.dokka:dokka-android-gradle-plugin:0.9.18'
        classpath 'com.github.dcendents:android-maven-gradle-plugin:2.1'
        classpath 'pl.allegro.tech.build:axion-release-plugin:1.11.0'
        classpath 'com.getkeepsafe.dexcount:dexcount-gradle-plugin:1.0.2'
        classpath 'com.github.ben-manes:gradle-versions-plugin:0.27.0'
        classpath 'de.mobilej.unmock:UnMockPlugin:0.7.4'
    }
}

apply plugin: 'com.github.ben-manes.versions'
apply plugin: 'pl.allegro.tech.build.axion-release'

scmVersion {
    tag {
        prefix = ''
    }
    hooks {
        pre 'fileUpdate', [file       : 'README.md',
                           pattern    : { v, p -> /(['\/])$v(['\/])/ },
                           replacement: { v, p -> "\$1$v\$2" }]
        pre 'fileUpdate', [file       : 'README.md',
                           pattern    : { v, p -> /(\/Kotlin-)[\d.]+/ },
                           replacement: { v, p -> "\$1${versions.kotlin}" }]
        pre 'commit', { v, p -> "Release version: $v [ci skip]" }
    }
}

allprojects {
    repositories {
        google()
        mavenCentral()
        jcenter()
    }
}

subprojects {
    version = scmVersion.version
    group = 'com.github.tmurakami.aackt'
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

ext {
    deps = [:]

    deps.ktlint = 'com.pinterest:ktlint:0.36.0'

    deps.kotlin = [stdlib: 'org.jetbrains.kotlin:kotlin-stdlib',
                   junit4: 'org.jetbrains.kotlin:kotlin-test-junit',]

    def androidx = [:]
    deps.androidx = androidx
    androidx.arch = [core: [testing: 'androidx.arch.core:core-testing:2.1.0',],]

    def lifecycleVersion = '2.2.0'
    androidx.lifecycle = [runtime             : "androidx.lifecycle:lifecycle-runtime:$lifecycleVersion",
                          livedata_core       : "androidx.lifecycle:lifecycle-livedata-core-ktx:$lifecycleVersion",
                          livedata            : "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycleVersion",
                          viewmodel           : "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycleVersion",
                          viewmodel_savedstate: "androidx.lifecycle:lifecycle-viewmodel-savedstate:$lifecycleVersion",]

    def roomVersion = '2.2.3'
    androidx.room = [runtime : "androidx.room:room-ktx:$roomVersion",
                     compiler: "androidx.room:room-compiler:$roomVersion",
                     rxjava2 : "androidx.room:room-rxjava2:$roomVersion",
                     testing : "androidx.room:room-testing:$roomVersion",]

    androidx.work = [runtime: 'androidx.work:work-runtime-ktx:2.3.1',]
}
