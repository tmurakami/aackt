buildscript {
    ext.versions = [kotlin: '1.3.10',]
    repositories {
        google()
        jcenter()
        maven { url 'https://plugins.gradle.org/m2/' }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.2.1'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${versions.kotlin}"
        classpath 'org.jetbrains.dokka:dokka-android-gradle-plugin:0.9.17'
        classpath 'com.github.dcendents:android-maven-gradle-plugin:2.1'
        classpath 'pl.allegro.tech.build:axion-release-plugin:1.9.3'
        classpath 'com.getkeepsafe.dexcount:dexcount-gradle-plugin:0.8.4'
        classpath 'com.github.ben-manes:gradle-versions-plugin:0.20.0'
    }
}

apply plugin: 'com.github.ben-manes.versions'
apply plugin: 'pl.allegro.tech.build.axion-release'

scmVersion {
    tag {
        prefix = ''
    }
    hooks {
        pre 'fileUpdate', [file       : 'README.md',
                           pattern    : { v, p -> /(['\/])$v(['\/])/ },
                           replacement: { v, p -> "\$1$v\$2" }]
        pre 'commit', { v, p -> "Release version: $v [ci skip]" }
    }
}

allprojects {
    repositories {
        google()
        jcenter()
    }
}

subprojects {
    version = scmVersion.version
    group = 'com.github.tmurakami.aackt'
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

ext {
    deps = [:]

    deps.ktlint = 'com.github.shyiko:ktlint:0.29.0'

    deps.kotlin = [stdlib: "org.jetbrains.kotlin:kotlin-stdlib:${versions.kotlin}",
                   junit4: "org.jetbrains.kotlin:kotlin-test-junit:${versions.kotlin}",]

    def androidx = [:]
    deps.androidx = androidx

    def lifecycleVersion = '2.0.0'
    androidx.arch = [core: [testing: "androidx.arch.core:core-testing:$lifecycleVersion",],]
    androidx.lifecycle = [runtime   : "androidx.lifecycle:lifecycle-runtime:$lifecycleVersion",
                          extensions: "androidx.lifecycle:lifecycle-extensions:$lifecycleVersion",
                          livedata  : "androidx.lifecycle:lifecycle-livedata:$lifecycleVersion",
                          viewmodel : "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycleVersion",]

    def roomVersion = '2.1.0-alpha02'
    androidx.room = [runtime: "androidx.room:room-runtime:$roomVersion",
                     rxjava2: "androidx.room:room-rxjava2:$roomVersion",
                     testing: "androidx.room:room-testing:$roomVersion",]
}
